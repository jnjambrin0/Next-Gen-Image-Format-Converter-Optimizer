name: SDK CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - 'sdks/**'
      - 'openapi.json'
      - '.github/workflows/sdk-ci.yml'
  pull_request:
    branches: [main]
    paths:
      - 'sdks/**'
      - 'openapi.json'
  release:
    types: [published]

jobs:
  python-sdk:
    name: Python SDK
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          cd sdks/python
          pip install --upgrade pip
          pip install -e .
          pip install pytest pytest-cov pytest-asyncio httpx
      
      - name: Run tests
        run: |
          cd sdks/python
          pytest tests/ --cov=image_converter --cov-report=xml
      
      - name: Upload coverage
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          file: ./sdks/python/coverage.xml
          flags: python-sdk
      
      - name: Build distribution
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        run: |
          cd sdks/python
          pip install build
          python -m build
      
      - name: Check distribution
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        run: |
          cd sdks/python
          pip install twine
          twine check dist/*
      
      - name: Upload artifacts
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        uses: actions/upload-artifact@v3
        with:
          name: python-dist
          path: sdks/python/dist/

  javascript-sdk:
    name: JavaScript SDK
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: ['16', '18', '20']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Install dependencies
        run: |
          cd sdks/javascript
          npm ci
      
      - name: Lint
        run: |
          cd sdks/javascript
          npm run lint
      
      - name: Build
        run: |
          cd sdks/javascript
          npm run build
      
      - name: Run tests
        run: |
          cd sdks/javascript
          npm test -- --coverage
      
      - name: Upload coverage
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '18'
        uses: codecov/codecov-action@v3
        with:
          file: ./sdks/javascript/coverage/lcov.info
          flags: javascript-sdk
      
      - name: Pack SDK
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '18'
        run: |
          cd sdks/javascript
          npm pack
      
      - name: Upload artifacts
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '18'
        uses: actions/upload-artifact@v3
        with:
          name: javascript-dist
          path: sdks/javascript/*.tgz

  go-sdk:
    name: Go SDK
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ['1.20', '1.21', '1.22']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      
      - name: Get dependencies
        run: |
          cd sdks/go
          go get -v -t -d ./...
      
      - name: Build
        run: |
          cd sdks/go
          go build -v ./...
      
      - name: Run tests
        run: |
          cd sdks/go
          go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
      
      - name: Upload coverage
        if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.21'
        uses: codecov/codecov-action@v3
        with:
          file: ./sdks/go/coverage.txt
          flags: go-sdk
      
      - name: Run go vet
        run: |
          cd sdks/go
          go vet ./...
      
      - name: Install golint
        if: matrix.os == 'ubuntu-latest'
        run: go install golang.org/x/lint/golint@latest
      
      - name: Run golint
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd sdks/go
          golint ./...

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Python Security Check
        run: |
          pip install safety bandit
          cd sdks/python
          safety check || true
          bandit -r image_converter/ -ll
      
      - name: JavaScript Security Check
        run: |
          cd sdks/javascript
          npm audit || true
      
      - name: Go Security Check
        run: |
          go install github.com/securego/gosec/v2/cmd/gosec@latest
          cd sdks/go
          gosec ./... || true

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [python-sdk, javascript-sdk, go-sdk]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Start API Server
        run: |
          cd backend
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt 2>/dev/null || pip install fastapi uvicorn httpx pillow
          uvicorn app.main:app --port 8080 &
          sleep 5
      
      - name: Test Python SDK
        run: |
          cd sdks/python
          pip install -e .
          python examples/convert_single.py --help
      
      - name: Test JavaScript SDK
        run: |
          cd sdks/javascript
          npm install
          npm run build
          node examples/node-convert.js --help
      
      - name: Test Go SDK
        run: |
          cd sdks/go
          go run examples/simple/main.go -help

  publish-python:
    name: Publish Python SDK
    runs-on: ubuntu-latest
    needs: [integration-test, security-scan]
    if: github.event_name == 'release'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: python-dist
          path: sdks/python/dist/
      
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          pip install twine
          twine upload sdks/python/dist/*

  publish-javascript:
    name: Publish JavaScript SDK
    runs-on: ubuntu-latest
    needs: [integration-test, security-scan]
    if: github.event_name == 'release'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: javascript-dist
          path: sdks/javascript/
      
      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd sdks/javascript
          npm publish *.tgz

  create-release-assets:
    name: Create Release Assets
    runs-on: ubuntu-latest
    needs: [integration-test, security-scan]
    if: github.event_name == 'release'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download Python artifacts
        uses: actions/download-artifact@v3
        with:
          name: python-dist
          path: python-dist/
      
      - name: Download JavaScript artifacts
        uses: actions/download-artifact@v3
        with:
          name: javascript-dist
          path: javascript-dist/
      
      - name: Create checksums
        run: |
          sha256sum python-dist/* javascript-dist/* > checksums.txt
      
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            python-dist/*
            javascript-dist/*
            checksums.txt
          fail_on_unmatched_files: false